<?php
/**
 *
 * @category : FME
 * @Package  : FME_CheckoutOrderAttributesFields
 * @Author   : FME Extensions <support@fmeextensions.com>
 * @copyright Copyright 2018 Â© fmeextensions.com All right reserved
 * @license https://fmeextensions.com/LICENSE.txt
 */
/* @var $block \FME\CheckoutOrderAttributesFields\Block\Attributes */
?>
<?php
$order = $block->getSelectedOrder();
$orderId = 0;
if ($order != null) {
    $orderId = $order->getId();
}
$helper = $this->helper('\FME\CheckoutOrderAttributesFields\Helper\Data');
$storeid = $block->getStore();
$attributes = $block->getAvailableAttributes();
$allattributes = $attributes->getData();
$element = '';
if (!empty($attributes)): ?>
<form action="<?php /* @escapeNotVerified */ echo $block->getPostUrl(); ?>"
    method="post"
    enctype="multipart/form-data"  class="form" id="aca-form"
    data-hasrequired="* Required Fields"
    data-mage-init='{"validation":{},"loader": {}}'>
    <div class="admin__page-section-title head-account">
        <span class="title"><?php echo $block->getLabel(); ?></span>
        <div class="actions">
            <a id="coaf_edit" href=""><?php echo __('Cancel'); ?></a>
        </div>
    </div>
    <fieldset class="fieldset admin__fieldset">
        <div class="admin__fieldset mal" id="showhere">
        <?php $shown = false;
            foreach ($attributes as $attribute) :
             $attribute->setStoreId($storeid);
            $helper->setCoreCoafFieldsMainDetails($attribute, $storeid);?>
            <?php $element = $block->getElement($attribute);?>
            <?php if ($element): 
                $shown = true;
                ?>
                <?php /* @escapeNotVerified */ echo $element;?>
                <span style="margin:5px;padding-bottom: 5px !important;"></span>
                <?php if($attribute->getFmeDependable() && $attribute->getFmeDcode() != ""
                 && array_search($attribute->getFmeDcode(), array_column( $allattributes, 'attribute_code')) !== false): ?>
                    <script type="text/javascript">
                        require(['jquery'], function($){
                            $(function() {
                                function findOne(haystack, arr) {
                                    if(haystack !== undefined) {
                                        return arr.some(function (v) {
                                            return haystack.indexOf(v) >= 0;
                                        });
                                    }
                                    return false;
                                };
                                function checkDependency() {
                                    var inputType = $('.field-<?php echo $attribute->getFmeDcode(); ?> [name^="order[fme][<?php echo $attribute->getFmeDcode(); ?>]"]').attr('type');
                                    var parentValues = '';
                                   
                                   if (inputType == 'checkbox' || inputType == 'radio') {
                                        parentValues = new Array();
                                        $.each($('.field-<?php echo $attribute->getFmeDcode(); ?> [acode="<?php echo $attribute->getFmeDcode(); ?>"]:checked'), function() {
                                          parentValues.push($(this).val().replace(/(<([^>]+)>)/ig,""));
                                        });
                                    } else if (inputType == 'multiselect' || inputType == 'select') {
                                        parentValues = new Array();
                                        $.each($('.field-<?php echo $attribute->getFmeDcode(); ?> [acode="<?php echo $attribute->getFmeDcode(); ?>"] option:selected'), function() {
                                          parentValues.push($(this).val().replace(/(<([^>]+)>)/ig,""));
                                        });
                                    } else {
                                        parentValues = $('.field-<?php echo $attribute->getFmeDcode(); ?> [acode="<?php echo $attribute->getFmeDcode(); ?>"]').val().replace(/(<([^>]+)>)/ig,"");
                                    }
                                    var found = findOne(parentValues, watchValues) ? 'true' : 'false';
                                    if(found == 'true') {
                                        $('.field-<?php echo $attribute->getAttributeCode(); ?>').show();
                                        $('.field-<?php echo $attribute->getAttributeCode(); ?> [acode=<?php echo $attribute->getAttributeCode(); ?>]').prop('disabled', false);
                                        if($('#<?php echo $attribute->getAttributeCode(); ?>_value')){
                                            $('#<?php echo $attribute->getAttributeCode(); ?>_value').prop('disabled', false);
                                        }
                                    } else {
                                        $('.field-<?php echo $attribute->getAttributeCode(); ?>').hide();
                                        $('.field-<?php echo $attribute->getAttributeCode(); ?> [acode=<?php echo $attribute->getAttributeCode(); ?>]').prop('disabled', true);
                                        if($('#<?php echo $attribute->getAttributeCode(); ?>_value')){
                                            $('#<?php echo $attribute->getAttributeCode(); ?>_value').prop('disabled', true);
                                        }
                                    }
                                };
                                var watchValues = <?php echo json_encode(explode(",", $attribute->getFmeDvalue())); ?>;
                                
                                if ($('.field-<?php echo $attribute->getFmeDcode(); ?> [acode=<?php echo $attribute->getFmeDcode(); ?>]')) {
                                    if ($('.field-<?php echo $attribute->getFmeDcode(); ?> [acode=<?php echo $attribute->getFmeDcode(); ?>]') && $('.field-<?php echo $attribute->getFmeDcode(); ?> [acode=<?php echo $attribute->getFmeDcode(); ?>]').prop('disabled')) {
                                        $('.field-<?php echo $attribute->getAttributeCode(); ?>').hide();
                                        $('.field-<?php echo $attribute->getAttributeCode(); ?> [acode=<?php echo $attribute->getAttributeCode(); ?>]').prop('disabled', true);
                                        if($('#<?php echo $attribute->getAttributeCode(); ?>_value')){
                                            $('#<?php echo $attribute->getAttributeCode(); ?>_value').prop('disabled', true);
                                        }
                                    } else if ($('.field-<?php echo $attribute->getFmeDcode(); ?> [acode=<?php echo $attribute->getFmeDcode(); ?>]') && ($('.field-<?php echo $attribute->getFmeDcode(); ?> [acode=<?php echo $attribute->getFmeDcode(); ?>]').prop('disabled') || !$('.field-<?php echo $attribute->getFmeDcode(); ?> [acode=<?php echo $attribute->getFmeDcode(); ?>]').is(':visible'))) {
                                        $('.field-<?php echo $attribute->getAttributeCode(); ?>').hide();
                                        $('.field-<?php echo $attribute->getAttributeCode(); ?> [acode=<?php echo $attribute->getAttributeCode(); ?>]').prop('disabled', true);
                                        if($('#<?php echo $attribute->getAttributeCode(); ?>_value')){
                                            $('#<?php echo $attribute->getAttributeCode(); ?>_value').prop('disabled', true);
                                        }
                                    } else if ($('.field-<?php echo $attribute->getFmeDcode(); ?> [acode=<?php echo $attribute->getFmeDcode(); ?>]') && (!$('.field-<?php echo $attribute->getFmeDcode(); ?> [acode=<?php echo $attribute->getFmeDcode(); ?>]').prop('disabled') && $('.field-<?php echo $attribute->getFmeDcode(); ?> [acode=<?php echo $attribute->getFmeDcode(); ?>]').is(':visible'))) {
                                        checkDependency();
                                    }
                                    $('.field-<?php echo $attribute->getFmeDcode(); ?> [acode=<?php echo $attribute->getFmeDcode(); ?>]').on('change click',function(){
                                        checkDependency();
                                    });
                                    var observer<?php echo $attribute->getFmeDcode(); ?> = new MutationObserver(function(mutations) {
                                        if ($('.field-<?php echo $attribute->getFmeDcode(); ?> [acode=<?php echo $attribute->getFmeDcode(); ?>]') && (!$('.field-<?php echo $attribute->getFmeDcode(); ?> [acode=<?php echo $attribute->getFmeDcode(); ?>]').prop('disabled') && $('.field-<?php echo $attribute->getFmeDcode(); ?> [acode=<?php echo $attribute->getFmeDcode(); ?>]').is(':visible'))) {
                                            checkDependency();
                                        } else {
                                            $('.field-<?php echo $attribute->getAttributeCode(); ?>').hide();
                                            $('.field-<?php echo $attribute->getAttributeCode(); ?> [acode=<?php echo $attribute->getAttributeCode(); ?>]').prop('disabled', true);
                                            if($('#<?php echo $attribute->getAttributeCode(); ?>_value')){
                                                $('#<?php echo $attribute->getAttributeCode(); ?>_value').prop('disabled', true);
                                            }
                                        }
                                    });
                                    var target<?php echo $attribute->getFmeDcode(); ?> = document.querySelector('.field-<?php echo $attribute->getFmeDcode(); ?> [acode=<?php echo $attribute->getFmeDcode(); ?>]');
                                    observer<?php echo $attribute->getFmeDcode(); ?>.observe(target<?php echo $attribute->getFmeDcode(); ?>, {
                                        attributes: true
                                    });
                                }
                            });
                        });
                    </script>
                <?php endif; ?>
            <?php endif;?>
        <?php endforeach;?>
        </div>
    </fieldset>
    <?php if($shown == true ): ?>
        <div class="actions-toolbar">
            <div class="primary">
                <input type="hidden" name="form_key" value="<?php echo $block->getAdminFormKey() ?>" />
                <input type="hidden" name="store_id" value="<?php echo $storeid; ?>" />
                <input type="hidden" name="order_id" id="order_id" value="<?php echo $orderId; ?>" />
                <button type="submit" title="Submit" id="aca_submit" class="action submit primary">
                    <span><?php echo __('Submit');?></span>
                </button>
            </div>
        </div>
     <?php else: ?>
        <div class="admin__page-section-item-title">
            <span class="title"><?php echo __('Seems no attribute available or enabled....');?></span>
        </div>
    <?php endif; ?>
</form>
    <script type="text/javascript">
        require(["jquery"],function($) {
            $(document).ready(function() {
                $('#aca_submit').click(function(){
                    $('body').trigger('processStart');
                });
            });
        });
    </script>
    <script>
        require([
            'jquery',
            'jquery/ui',
            'jquery/validate',
            'mage/translate'
        ], function ($) {
            $("input[type='file']").attr('form','customer_form');
            $.validator.addMethod(
                'validate-one-required-by-name-radio', function (v, elm) {
                   var name = elm.name.replace(/([\\"])/g, '\\$1');
                    selector = 'input[name="' + name + '"]:checked';
                    if( $(selector).length > 0 ) {
                        return true;
                    }
                    return false;
                },
                $.mage.__('Please select one of the options above.')
            );
            $.validator.addMethod(
                'validate-one-required-by-name-checkbox', function (v, elm) {

                    var name = elm.name.replace(/([\\"])/g, '\\$1');
                    selector = 'input[name="' + name + '"]';
                    selectorAttribute = $(selector).attr('attribute_code');
                    mainSelector = 'input[attribute_code="' + selectorAttribute + '"]:checked';
                    mainSender = selector = 'input[name="' + selectorAttribute + '"]';
                    if( $(mainSelector).length > 0 ) {
                        var allVals = [];
                        $(mainSelector).each(function() {
                            allVals.push($(this).val());
                        });
                        $(mainSender).val(allVals);
                        return true;
                    }
                    return false;
                },
                $.mage.__('Please select atleast one option.')
            );

            $.validator.addMethod(
                'validate-filesize', function (v, elm) {
                    var allowed  = $(elm).attr('size');
                    var maxSize = allowed * 1048576;
                    if (navigator.appName == "Microsoft Internet Explorer") {
                        if (elm.value) {
                            var oas = new ActiveXObject("Scripting.FileSystemObject");
                            var e = oas.getFile(elm.value);
                            var size = e.size;
                        }
                    } else {
                        if (elm.files[0] != undefined) {
                            size = elm.files[0].size;
                        }
                    }
                    if (size != undefined && size > maxSize) {
                        return false;
                    }
                    return true;
                }, $.mage.__('The file size should not exceed the mentioned size')
            );
            //Validate Image Extensions
            $.validator.addMethod(
                'validate-fileextensions', function (v, elm) {

                    var extensions = $(elm).attr('types').split(",");
                    if (!v) {
                        return true;
                    }
                    with (elm) {
                        var ext = value.substring(value.lastIndexOf('.') + 1);
                        for (i = 0; i < extensions.length; i++) {
                            if (ext == extensions[i]) {
                                return true;
                            }
                        }
                    }
                    return false;
                }, $.mage.__('Disallowed file type.')
            );
            //Validate Image Width and Height
            $.validator.addMethod(
                'validate-image-height-width', function (v, elm) {
                    if (!v) {
                        return true;
                    }
                    with (elm) {
                        var file, img;
                        if ((file = elm.files[0])) {
                            img = new Image();
                            img.onload = function () {
                                var height = this.height,
                                        width = this.width;
                                if (height > 100 || width > 100) {
                                    return false;
                                }

                                return true;
                            };
                        }
                    }
                    return false;
                }, $.mage.__('Height and Width must not exceed 100px.')
            );
        });
    </script>
<?php endif; ?>
